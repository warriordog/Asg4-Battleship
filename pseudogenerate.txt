Pseudocode to randomly populate a battleship board with ships.

This is something I came up with last night for placing ships at the start of the game.
I wasn't quite certain what all the moving pieces were in the server, and didn't want
to mess things up on accident, so I wrote my solution in pseudocode. Hopefully it's 
helpful.


public int curplayer;
public void generate(){
    for(int i=5; i>0; i--){
        int l = i;
        if(i<3){
            l++;
        }
        for(int j=1; j<=numplayers; j++){
            curplayer = j;
            boolean pass = false;
            while(!pass){
                int rx = random(0, width-1);
                int ry = random(0, height-1);
                int orientation = random(0, 3);
                if(scan(rx, ry, orientation, l)){
                    fill(rx, ry, orientation, l);
                    pass = true;
                }
                else{
                    pass = false;
                }
            }
        }
    }
}

public boolean scan(x, y, or, l){
    if(or==0){//Orientation being 0 means that the ship goes directly UP from the initial x and y coodinates.
        if(y+1>=l){
            for(int i=0; i<l; i++){
                if(board[x][y-i]!=0){
                    return false;
                }
            }
            return true;
        }
        else{
            return false;
        }
    }
    else if(or==1){//Orientation being 1 means that the ship goes directly RIGHT from the initial x and y coodinates.
        if((x+l)<=width){
            for(int i=0; i<l; i++){
                if(board[x+i][y]!=0){
                    return false;
                }
            }
            return true;
        }
        else{
            return false;
        }
    }
    else if(or==2){//Orientation being 2 means that the ship goes directly DOWN from the initial x and y coodinates.
        if((y+l)<=height){
            for(int i=0; i<l; i++){
                if(board[x][y+i]!=0){
                    return false;
                }
            }
            return true;
        }
        else{
            return false;
        }
    }
    else if(or==3){//Orientation being 3 means that the ship goes directly LEFT from the initial x and y coodinates.
        if(x+1>=l){
            for(int i=0; i<l; i++){
                if(board[x-i][y]!=0){
                    return false;
                }
            }
            return true;
        }
        else{
            return false;
        }
    }
}

public void fill(x, y, or, l){
    if(or==0){
        for(int i=0; i<l; i++){
            board[x][y-i] = curplayer;
        }
    }
    else if(or==1){
        for(int i=0; i<l; i++){
            board[x+i][y] = curplayer;
        }
    }
    else if(or==2){
        for(int i=0; i<l; i++){
            board[x][y+i] = curplayer;
        }
    }
    else if(or==3){
        for(int i=0; i<l; i++){
            board[x-i][y] = curplayer;
        }
    }
}